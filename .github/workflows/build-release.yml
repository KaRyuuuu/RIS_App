name: Build and Release RIS_app

on:
  push:
    branches: [main]
  tags:
    - 'v*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install .
          pip install ruff pytest

      - name: Run lint
        run: ruff check .

      - name: Run tests
        run: pytest

      - name: Generate catalog
        run: python scripts/gen_catalog.py

      - name: Prepare artifacts directory
        run: |
          mkdir -p artifacts
          cp ris_app/data/catalog.json artifacts/catalog.json

      - name: Create core archive
        run: |
          python - <<'PY'
from pathlib import Path
from ris_app import __version__
from ris_app.config import ROOT_DIR, PLUGINS_DIR
from ris_app.utils.io import zip_dir

core_dir = ROOT_DIR
archive_path = Path('artifacts') / f'ris_app_core_{__version__}.zip'
exclude = [PLUGINS_DIR]
zip_dir(core_dir, archive_path, exclude=exclude)
PY

      - name: Create plugin archives
        run: |
          python - <<'PY'
import json
from pathlib import Path
from ris_app.config import PLUGINS_DIR
from ris_app.utils.io import zip_dir

artifacts = Path('artifacts')
artifacts.mkdir(exist_ok=True)
for plugin_json in PLUGINS_DIR.glob('*/plugin.json'):
    data = json.loads(plugin_json.read_text(encoding='utf-8'))
    slug = data['slug']
    version = data['version']
    zip_path = artifacts / f'plugin_{slug}_{version}.zip'
    zip_dir(plugin_json.parent, zip_path)
PY

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ris_app_build
          path: artifacts

      - name: Publish release
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/*.zip
            artifacts/catalog.json
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
