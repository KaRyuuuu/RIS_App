name: Build and Release RIS_app

on:
  push:
    branches: [main]
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install .
          pip install ruff pytest

      - name: Run lint
        run: ruff check . --fix

      - name: Run tests
        run: pytest

      - name: Resolve version
        id: resolve_version
        shell: bash
        run: |
          if [[ "${GITHUB_REF}" == refs/tags/v* ]]; then
            VERSION="${GITHUB_REF_NAME#v}"
            RELEASE_TAG="${GITHUB_REF_NAME}"
            IS_TAG="true"
          else
            VERSION=$(python scripts/get_version.py)
            RELEASE_TAG="v${VERSION}"
            IS_TAG="false"
          fi

          echo "version=${VERSION}" >> "$GITHUB_OUTPUT"
          echo "release_tag=${RELEASE_TAG}" >> "$GITHUB_OUTPUT"
          echo "is_tag=${IS_TAG}" >> "$GITHUB_OUTPUT"
          echo "âœ… Version dÃ©tectÃ©e : ${VERSION}"

      - name: Build zips and catalog
        shell: bash
        env:
          VERSION: ${{ steps.resolve_version.outputs.version }}
          RELEASE_TAG: ${{ steps.resolve_version.outputs.release_tag }}
          IS_TAG: ${{ steps.resolve_version.outputs.is_tag }}
          REPO_SLUG: KaRyuuuuuu/RIS_app
        run: |
          set -euo pipefail
          mkdir -p artifacts

          echo "ðŸ“¦ Zippage du core..."
          zip -r "artifacts/ris_app_core_${VERSION}.zip" ris_app -x "ris_app/plugins/*" >/dev/null
          sha256sum "artifacts/ris_app_core_${VERSION}.zip" | awk '{print $1}' > "artifacts/ris_app_core_${VERSION}.sha256"

          echo "ðŸ“¦ Zippage des plugins..."
          python scripts/gen_catalog.py "${VERSION}" "${IS_TAG}" "${RELEASE_TAG}" "${REPO_SLUG}"

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ris_app_build
          path: artifacts

      - name: Publish release (tagged builds)
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v2
        with:
          files: |
            artifacts/*.zip
            artifacts/*.sha256
            artifacts/catalog.json
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
