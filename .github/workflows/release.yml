name: Build & Release

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:
    inputs:
      version:
        description: "Version manuelle (ex: v1.0)"
        required: false
        default: ""

permissions:
  contents: write   # ✅ Nécessaire pour créer la release !

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller

      - name: Check repo content
        run: |
          echo "=== Root ==="
          dir
          echo "=== Assets ==="
          dir assets

      - name: Create default servers.json
        run: |
          mkdir assets
          echo [ { "name": "GitHub Latest", "url": "https://github.com/KaRyuuuu/RIS_App/releases/latest/download/RIS_App-win-x64.zip" } ] > assets/servers.json

      - name: Build exe (PyInstaller)
        run: pyinstaller --noconfirm --onefile --noconsole launcher_ctk.py --add-data "assets\\servers.json;assets"

      - name: Prepare ZIP
        shell: pwsh
        run: |
          mkdir release
          Copy-Item dist\\launcher_ctk.exe release\\RIS_App.exe
          Compress-Archive -Path release\\* -DestinationPath RIS_App-win-x64.zip
          CertUtil -hashfile RIS_App-win-x64.zip SHA256 > SHA256SUM.txt

      - name: Compute version
        id: version
        shell: bash
        run: |
          if [[ "${GITHUB_REF_TYPE}" == "tag" ]]; then
            TAG="${GITHUB_REF_NAME}"
          else
            TAG="${{ github.event.inputs.version }}"
          fi
          if [[ -z "$TAG" ]]; then
            TAG="nightly-$(date -u +%Y%m%d%H%M%S)"
            echo "IS_PRERELEASE=true" >> $GITHUB_OUTPUT
          else
            echo "IS_PRERELEASE=false" >> $GITHUB_OUTPUT
          fi
          echo "tag=$TAG" >> $GITHUB_OUTPUT

      - name: Create/Update GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.version.outputs.tag }}
          name: ${{ steps.version.outputs.tag }}
          prerelease: ${{ steps.version.outputs.IS_PRERELEASE }}
          files: |
            dist/launcher_ctk.exe
            RIS_App-win-x64.zip
            SHA256SUM.txt
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
